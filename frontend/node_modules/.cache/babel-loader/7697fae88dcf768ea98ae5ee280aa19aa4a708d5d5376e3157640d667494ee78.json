{"ast":null,"code":"var _jsxFileName = \"/home/ali/Desktop/task/cloudlem-task/frontend/src/components/contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // Corrected variable name\n  const [newNote, setNewNote] = useState({\n    email: '',\n    title: '',\n    content: ''\n  }); // Corrected variable name\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewNote({\n      ...newNote,\n      [name]: value\n    });\n  };\n  const saveNote = async () => {\n    try {\n      // Make sure you include the necessary logic for fetching user_id\n      // For demonstration purposes, I'm assuming you have a user_id variable available\n      const user_id = \"your_user_id_here\";\n\n      // Ensure user_id is not null before making the request\n      if (!user_id) {\n        console.error('User ID is null. Unable to save note.');\n        return;\n      }\n\n      // Make sure you include user_id in the request payload\n      const response = await fetch('http://localhost:2002/api/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user_id,\n          title: newNote.title,\n          content: newNote.content\n        })\n      });\n      const data = await response.json();\n      setNotes([...notes, data]);\n      setNewNote({\n        email: '',\n        title: '',\n        content: ''\n      }); // Corrected variable name\n    } catch (error) {\n      console.error('Error saving note:', error);\n    }\n  };\n  useEffect(() => {\n    console.log('New Note:', newNote);\n  }, [newNote]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Write any massage for Me! :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\" // Corrected input type\n        ,\n        name: \"email\",\n        value: newNote.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: newNote.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        value: newNote.content,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveNote,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"QVeOaTrzOwWijdEBW8VC2u+KZrY=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Contact","_s","notes","setNotes","newNote","setNewNote","email","title","content","handleInputChange","e","name","value","target","saveNote","user_id","console","error","response","fetch","method","headers","body","JSON","stringify","data","json","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/ali/Desktop/task/cloudlem-task/frontend/src/components/contact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Contact = () => {\n  const [notes, setNotes] = useState([]); // Corrected variable name\n  const [newNote, setNewNote] = useState({ email: '', title: '', content: '' }); // Corrected variable name\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewNote({ ...newNote, [name]: value });\n  };\n\n  const saveNote = async () => {\n    try {\n      // Make sure you include the necessary logic for fetching user_id\n      // For demonstration purposes, I'm assuming you have a user_id variable available\n      const user_id = \"your_user_id_here\";\n\n      // Ensure user_id is not null before making the request\n      if (!user_id) {\n        console.error('User ID is null. Unable to save note.');\n        return;\n      }\n\n      // Make sure you include user_id in the request payload\n      const response = await fetch('http://localhost:2002/api/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: user_id,\n          title: newNote.title,\n          content: newNote.content,\n        }),\n      });\n\n      const data = await response.json();\n      setNotes([...notes, data]);\n      setNewNote({ email: '', title: '', content: '' }); // Corrected variable name\n    } catch (error) {\n      console.error('Error saving note:', error);\n    }\n  };\n\n  useEffect(() => {\n    console.log('New Note:', newNote);\n  }, [newNote]);\n\n  return (\n    <div className=\"contact\">\n      <div className=\"contactm\">\n        <h2>Write any massage for Me! :</h2>\n        <label>Your email:</label>\n        <input\n          type=\"email\" // Corrected input type\n          name=\"email\"\n          value={newNote.email}\n          onChange={handleInputChange}\n        />\n        <label>Title:</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={newNote.title}\n          onChange={handleInputChange}\n        />\n        <label>Content:</label>\n        <textarea\n          name=\"content\"\n          value={newNote.content}\n          onChange={handleInputChange}\n        />\n        <button onClick={saveNote}>Send</button>\n      </div>\n      <div className=\"contactid\">\n        <div className=\"box\">\n          {/* ... (Your existing code for contact info) */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}